<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idp.web.system.dao.SysUserDao">

    <parameterMap id="parameterMap" type="com.idp.web.system.entity.SysUser"></parameterMap>
    <resultMap id="resultMap" type="com.idp.web.system.entity.SysUser">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="orgId" column="org_id"/>
        <result property="birthday" column="birthday"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="parentId" column="parent_id"/>
        <result property="rotationId" column="rotation_id"/>
        <result property="userCode" column="user_code"/>
        <result property="parentName" column="parent_name"/>
        <result property="description" column="description"/>
        <result property="userPhoto" column="user_photo"/>
        <result property="delFlag" column="del_flag"/>
        <result property="orgCode" column="org_code"/>
        <result property="orgName" column="org_name"/>
        <result property="isWork" column="is_work"/>
        <association property="parentUser" column="parent_id" select="getByIds"></association>
    </resultMap>

    <sql id="queryColumn">
		t.id,
		t.username,
		t.password,
		t.name,
		t.org_id,
		t.birthday,
		t.phone,
		t.email,
		t.parent_id,
		t.rotation_id,
		t.user_code,
		t.parent_name,
		t.description,
		t.user_photo,
		t.is_work
	</sql>


    <select id="finds" parameterMap="parameterMap" resultType="com.idp.web.system.entity.SysUser">
        select
        <include refid="queryColumn"></include>
        from sys_user t
        <where>
            <if test="name != null and name != ''">
                and t.name like '%${name}%'
            </if>
            <if test="parentName != null and parentName != ''">
                and t.parent_name like '%${parentName}%'
            </if>
            <if test="parentId != null">
                and t.parent_id = #{parentId}
            </if>
        </where>
        order by t.user_code
    </select>

    <select id="findByNameAndId" parameterMap="parameterMap" resultType="com.idp.web.system.entity.SysUser">
        select
        <include refid="queryColumn"></include>
        from sys_user t
    </select>

    <select id="find" parameterMap="parameterMap" resultMap="resultMap">
        select
        <include refid="queryColumn"></include>,
        o.org_code,
        o.org_name
        from sys_user t
        left join sys_org o on o.id = t.org_id
        <where>
            t.del_flag = '0'
            <if test="username != null and username != ''">
                and t.username like '%${username}%'
            </if>
            <if test="parentName != null and parentName != ''">
                and t.parent_name like '%${parentName}%'
            </if>
            <if test="name != null and name != ''">
                and t.name like '%${name}%'
            </if>
            <if test="orgId != null">
                and t.org_id = #{orgId}
            </if>
        </where>
    </select>

    <select id="findForTreeTable" parameterType="java.lang.String" resultType="com.idp.web.system.entity.SysUser">
        select
        <include refid="queryColumn"></include>,
        count(o.id) as child_num
        from sys_user t
        left join sys_user o on o.parent_id = t.id
        where t.parent_id = #{value}
        group by t.id
        order by t.user_code
    </select>


    <select id="getById" parameterType="java.lang.String" resultMap="resultMap">
        select
        <include refid="queryColumn"></include>,
        o.org_code,
        o.org_name
        from sys_user t
        left join sys_org o on o.id = t.org_id
        where t.id = #{value}
    </select>

    <select id="findByUsername" parameterType="java.lang.String" resultMap="resultMap">
        select
        <include refid="queryColumn"></include>
        from sys_user t
        where t.del_flag = '0' and t.username = #{value}
    </select>

    <insert id="add" parameterMap="parameterMap">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            username,
            password,
            name,
            org_id,
            birthday,
            phone,
            email,
            parent_id,
            rotation_id,
            user_code,
            parent_name,
            description,
            user_photo,
            del_flag,
            create_user,
            create_date,
            is_work,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id},
            #{username},
            #{password},
            #{name},
            #{orgId},
            #{birthday},
            #{phone},
            #{email},
            #{parentId},
            #{rotationId},
            #{userCode},
            #{parentName},
            #{description},
            #{userPhoto},
            #{delFlag},
            #{createUser},
            #{createDate},
            #{isWork},
        </trim>
    </insert>

    <update id="update" parameterMap="parameterMap">
        update sys_user
        <set>
            username = #{username},
            name = #{name},
            org_id = #{orgId},
            birthday = #{birthday},
            phone = #{phone},
            email = #{email},
            parent_id = #{parentId},
            rotation_id = #{rotationId},
            user_code = #{userCode},
            parent_name=#{parentName},
            description = #{description},
            <if test="userPhoto != null">
                user_photo = #{userPhoto},
            </if>
            update_user = #{updateUser},
            update_date = #{updateDate},
            is_work = #{isWork},
        </set>
        where id = #{id}
    </update>

    <update id="updateByUserCode" parameterMap="parameterMap">
        update sys_user
        <set>
            user_code = #{userCode}
        </set>
        where id = #{id}
    </update>


    <update id="updateUserPassword" parameterMap="parameterMap">
        update sys_user
        <set>
            password = #{password}
        </set>
        where username = #{username}
    </update>
    <delete id="delete" parameterType="java.lang.String">
		delete from sys_user where id = #{value}
	</delete>

    <delete id="batchDelete" parameterType="java.util.List">
        delete from sys_user where id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>


    <select id="getMaxCode" parameterType="java.lang.String" resultType="java.lang.String">
        select max(user_code) from sys_user where parent_id  = #{value}
    </select>


    <select id="getByIds" parameterType="java.lang.String" resultMap="resultMap">
        select
        <include refid="queryColumn"></include>
        from sys_user t
        where t.id = #{value}
    </select>


    <delete id="deleteByParentId" parameterType="java.lang.String">
        delete from sys_user where parent_id = #{value}
    </delete>

    <select id="getByParentId" parameterType="java.lang.String" resultMap="resultMap">
        select
        <include refid="queryColumn"></include>
        from sys_user t
        where t.parent_id = #{value}
    </select>
    <select id="getByCount" parameterMap="parameterMap" resultMap="resultMap">
        SELECT
        <include refid="queryColumn"></include>
        from sys_user t where t.is_work != '1' and t.username !='ivan' and t.username !='fangbo' and t.username !='admin' and t.username ='liyi' and t.id NOT in
        (select user_id from vp_reporting t where TO_DAYS(NOW()) - TO_DAYS(t.reporting_date) =1)
        GROUP BY t.username
    </select>

    <select id="getByCountEmail" parameterMap="parameterMap" resultMap="resultMap">
        SELECT
        <include refid="queryColumn"></include>
        from sys_user t where t.is_work != '1' and t.username !='ivan' and t.username !='fangbo' and t.username !='admin' and t.username ='liyi' and t.id NOT in
        (select user_id from vp_reporting t where TO_DAYS(NOW()) - TO_DAYS(t.reporting_date) =1)
        GROUP BY t.username
    </select>

    <select id="getByCountMonthEmail" parameterMap="parameterMap" resultMap="resultMap">
        SELECT
        <include refid="queryColumn"></include>
        from sys_user t where t.is_work != '1' and t.username !='ivan' and t.username !='fangbo' and t.username !='admin' and t.username ='liyi' and t.id
        NOT in
        (
        SELECT user_id FROM vp_assessment e
        WHERE PERIOD_DIFF(date_format(now(),'%Y%m'),date_format(concat(e.pas_month,'-01'), '%Y%m' )) =1
        )
        GROUP BY t.username
    </select>

    <select id="getByCountMonth" parameterMap="parameterMap" resultMap="resultMap">
        SELECT
        <include refid="queryColumn"></include>
        from sys_user t where t.is_work != '1' and t.username !='ivan' and t.username !='fangbo' and t.username !='admin' and t.username ='liyi' and t.id
        NOT in
        (
        SELECT user_id FROM vp_assessment e
        WHERE PERIOD_DIFF(date_format(now(),'%Y%m'),date_format(concat(e.pas_month,'-01'), '%Y%m' )) =1
        )
        GROUP BY t.username
    </select>
    <select id="getByUserAll" resultMap="resultMap" parameterType="java.util.List">
        SELECT
        <include refid="queryColumn"></include>
        FROM sys_user
    </select>

</mapper>